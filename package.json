{
    "name": "vscode-neos-fusion-lsp",
    "displayName": "Neos Fusion & AFX Language Server",
    "description": "Language server for Neos Fusion (and AFX)",
    "author": "Simon J. Schmidt",
    "icon": "images/logo.png",
    "galleryBanner": {
        "color": "#6600CC",
        "theme": "dark"
    },
    "license": "AGPL-3.0-or-later",
    "version": "0.5.17",
    "categories": [
        "Programming Languages"
    ],
    "keywords": [
        "Neos",
        "Neos CMS",
        "Fusion",
        "AFX",
        "EEL"
    ],
    "publisher": "SimonSchmidt",
    "engines": {
        "vscode": "^1.70.0"
    },
    "activationEvents": [
        "workspaceContains:**/*.fusion",
        "onView:neosConfiguration"
    ],
    "extensionKind": [
        "workspace",
        "ui"
    ],
    "main": "./client/out/main.js",
    "extensionDependencies": [
        "networkteam.neos-fusion"
    ],
    "extensionPack": [
        "formulahendry.auto-rename-tag",
        "formulahendry.auto-close-tag"
    ],
    "contributes": {
        "configuration": [
            {
                "type": "object",
                "order": 1,
                "title": "Folders",
                "properties": {
                    "neosFusionLsp.folders.root": {
                        "order": 1,
                        "scope": "window",
                        "type": "string",
                        "default": "./",
                        "description": "The folder where the root 'composer.json' lays in"
                    },
                    "neosFusionLsp.folders.packages": {
                        "order": 2,
                        "scope": "window",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "title": "Folder path"
                        },
                        "default": [
                            "DistributionPackages",
                            "Packages/Application",
                            "Packages/Framework",
                            "Packages/Plugins",
                            "Packages/Sites",
                            "Packages/Neos",
                            "Packages/Carbon"
                        ],
                        "description": "Folders with packages"
                    },
                    "neosFusionLsp.folders.workspaceAsPackageFallback": {
                        "order": 3,
                        "scope": "window",
                        "type": "boolean",
                        "default": true,
                        "description": "If no packages folders can be found, treat the workspace as a package"
                    },
                    "neosFusionLsp.folders.projectConfiguration": {
                        "order": 4,
                        "scope": "window",
                        "type": "string",
                        "default": "Configuration",
                        "description": "Path to the base Configuration folder in the Project"
                    },
                    "neosFusionLsp.folders.fusion": {
                        "order": 5,
                        "scope": "window",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "title": "Folder path inside Package"
                        },
                        "default": [
                            "Resources/Private/Fusion",
                            "Resources/Private/FusionModule",
                            "Resources/Private/FusionModules",
                            "Resources/Private/FusionPlugins",
                            "NodeTypes"
                        ],
                        "description": "Fusion Folder inside Package"
                    },
                    "neosFusionLsp.folders.ignore": {
                        "order": 6,
                        "scope": "window",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "title": "Folder path"
                        },
                        "default": [
                            "Packages/Libraries"
                        ],
                        "description": "Folders to ignore"
                    },
                    "neosFusionLsp.folders.followSymbolicLinks": {
                        "order": 7,
                        "scope": "window",
                        "type": "boolean",
                        "default": false,
                        "description": "Should a symbolic link be followed while searching for packages?"
                    },
                    "neosFusionLsp.folders.includeHiddenDirectories": {
                        "order": 8,
                        "scope": "window",
                        "type": "boolean",
                        "default": false,
                        "description": "Should hidden directories be included while searching for packages?"
                    }
                }
            },
            {
                "title": "Diagnostics",
                "order": 2,
                "properties": {
                    "neosFusionLsp.diagnostics.enabled": {
                        "type": "boolean",
                        "order": 0,
                        "default": true,
                        "description": "Enable diagnostics feature."
                    },
                    "neosFusionLsp.diagnostics.enabledDiagnostics": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "FusionProperties": {
                                "type": "boolean"
                            },
                            "ResourceUris": {
                                "type": "boolean"
                            },
                            "TagNames": {
                                "type": "boolean"
                            },
                            "EelHelperArguments": {
                                "type": "boolean"
                            },
                            "PrototypeNames": {
                                "type": "boolean"
                            },
                            "EmptyEel": {
                                "type": "boolean"
                            },
                            "ActionUri": {
                                "type": "boolean"
                            },
                            "NodeTypeDefinitions": {
                                "type": "boolean"
                            },
                            "NonParsedFusion": {
                                "type": "boolean"
                            },
                            "RootFusionConfiguration": {
                                "type": "boolean"
                            },
                            "TranslationShortHand": {
                                "type": "boolean"
                            },
                            "ParserError": {
                                "type": "boolean"
                            },
                            "AfxWithDollarEel": {
                                "type": "boolean"
                            },
                            "DuplicateStatements": {
                                "type": "boolean"
                            }
                        },
                        "default": {
                            "FusionProperties": true,
                            "ResourceUris": true,
                            "TagNames": true,
                            "EelHelperArguments": true,
                            "PrototypeNames": true,
                            "EmptyEel": true,
                            "ActionUri": true,
                            "NodeTypeDefinitions": true,
                            "NonParsedFusion": true,
                            "RootFusionConfiguration": true,
                            "TranslationShortHand": true,
                            "ParserError": true,
                            "AfxWithDollarEel": true,
                            "DuplicateStatements": true
                        },
                        "description": "Set which diagnostic is enabled"
                    },
                    "neosFusionLsp.diagnostics.ignoreNodeTypes": {
                        "type": "array",
                        "order": 1,
                        "items": {
                            "type": "string",
                            "title": "NodeType name"
                        },
                        "default": [
                            "Neos.Neos:Plugin"
                        ],
                        "description": "List of Prototypes which do not need a NodeType YAML file"
                    },
                    "neosFusionLsp.diagnostics.levels.deprecations": {
                        "type": "string",
                        "order": 2,
                        "default": "hint",
                        "enum": [
                            "hint",
                            "info",
                            "warning",
                            "error"
                        ],
                        "enumDescriptions": [
                            "Just show the strike through",
                            "Provide some infos about the deprecation",
                            "Show a ignorable warning",
                            "Mark the deprecation as error"
                        ],
                        "description": "Set the diagnostics level of deprecations."
                    },
                    "neosFusionLsp.diagnostics.ignore.folders": {
                        "scope": "window",
                        "type": "array",
                        "order": 3,
                        "items": {
                            "type": "string",
                            "title": "Folder path"
                        },
                        "default": [
                            "Packages/"
                        ],
                        "description": "Folders to ignore automatic diagnostics in"
                    },
                    "neosFusionLsp.diagnostics.alwaysDiagnoseChangedFile": {
                        "scope": "window",
                        "type": "boolean",
                        "order": 4,
                        "default": false,
                        "description": "Always diagnose changed files even if they are in ignored folders."
                    }
                }
            },
            {
                "title": "Hints",
                "order": 3,
                "properties": {
                    "neosFusionLsp.inlayHint.depth": {
                        "type": "string",
                        "default": "literal",
                        "description": "Set if or when inlay hints should be shown",
                        "enum": [
                            "disabled",
                            "literal",
                            "always"
                        ],
                        "enumDescriptions": [
                            "Disable Inlay Hints",
                            "Only show Inlay Hints on literals",
                            "Always show Inlay Hints"
                        ]
                    }
                }
            },
            {
                "title": "Extensions",
                "order": 4,
                "properties": {
                    "neosFusionLsp.extensions.modify": {
                        "type": "boolean",
                        "default": true,
                        "description": "Allow modification of a few settings of other extensions to improve the experience."
                    }
                }
            },
            {
                "title": "Code",
                "order": 5,
                "properties": {
                    "neosFusionLsp.code.deprecations.fusion.prototypes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "markdownDescription": "An object of deprecated fusion-prototypes. \n\nStructure: \n| Item | Value |\n| ------------ | ------------ |\n| OldPrototype | NewPrototype | \n\n\nIf it should be ignored use `{ignore}` as the value",
                        "default": {
                            "Neos.Fusion:Array": "Neos.Fusion:Join",
                            "Neos.Fusion:Collection": "Neos.Fusion:Loop",
                            "Neos.Fusion:RawCollection": "Neos.Fusion:Map",
                            "Neos.Fusion:RawArray": "Neos.Fusion:DataStructure",
                            "Neos.Fusion:UriBuilder": "Neos.Fusion:ActionUri"
                        }
                    },
                    "neosFusionLsp.code.actions.createNodeTypeConfiguration.template": {
                        "type": "string",
                        "editPresentation": "multilineText",
                        "markdownDescription": "Template which is used to generate NodeType configuration files\n\nUsable variables are:\n- `{nodeTypeName}` ",
                        "default": "{nodeTypeName}:\n  properties:"
                    },
                    "neosFusionLsp.code.actions.createNodeTypeConfiguration.detectAbstractRegEx": {
                        "type": "string",
                        "editPresentation": "singlelineText",
                        "markdownDescription": "RegEx which detects if NodeType is abstract.\nThis enables the 'Create Abstract NodeType File'",
                        "default": "(?:A|a)bstract"
                    },
                    "neosFusionLsp.code.fusion.rootFiles": {
                        "type": "array",
                        "markdownDescription": "Which Fusion files should be used as an entrypoint to build the *MergedArrayTree*. \n\n  The paths are relative for each Package",
                        "items": {
                            "type": "string",
                            "title": "Root.fusion path"
                        },
                        "default": [
                            "/Private/Fusion/Root.fusion",
                            "/Private/FusionModules/Root.fusion",
                            "/Private/FusionPlugins/Root.fusion"
                        ]
                    }
                }
            },
            {
                "title": "Logging",
                "order": 10,
                "properties": {
                    "neosFusionLsp.logging.level": {
                        "type": "string",
                        "default": "info",
                        "enum": [
                            "info",
                            "verbose",
                            "debug"
                        ],
                        "enumDescriptions": [
                            "Just some general information",
                            "A bit more explaining and additional information",
                            "Shows everything it can"
                        ]
                    },
                    "neosFusionLsp.logging.inspect": {
                        "type": "boolean",
                        "default": false,
                        "description": "When starting the LSP wait for an inspector to connect."
                    }
                }
            },
            {
                "title": "🧪 Experimental",
                "order": 20,
                "properties": {
                    "neosFusionLsp.experimental.fusionParserCaching": {
                        "type": "boolean",
                        "default": false,
                        "description": "**NOT IN USE** Enable experimental caching in the Fusion Parser."
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "neos-fusion-lsp.inspect",
                "title": "Fusion: Inspect Neos Fusion LSP "
            },
            {
                "command": "neos-fusion-lsp.reload",
                "title": "Fusion: Reload Neos Fusion LSP "
            }
        ],
        "languages": [
            {
                "id": "fusion",
                "extensions": [
                    ".fusion"
                ],
                "aliases": [
                    "Fusion"
                ],
                "configuration": "./language-configuration.json",
                "icon": {
                    "dark": "./icons/filetype_dark_fusion.svg",
                    "light": "./icons/filetype_light_fusion.svg"
                }
            }
        ],
        "icons": {
            "neos-lsp": {
                "description": "Neos Icon - LSP edition",
                "default": {
                    "fontPath": "icons/icon-font.woff",
                    "fontCharacter": "A"
                }
            }
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "neos",
                    "title": "Neos",
                    "icon": "icons/view_container-neos.svg"
                }
            ]
        },
        "views": {
            "neos": [
                {
                    "id": "neosConfiguration",
                    "name": "🧪-Experimental-🧪 Configuration"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "neosConfiguration",
                "contents": "No Configuration loaded.\nOpen any file to start the Language Server"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "yarn run compile",
        "compile": "cd client && yarn run esbuild && cd ../server && yarn run esbuild && cd ..",
        "compile-without-minify": "cd client && yarn run esbuild && cd ../server && yarn run esbuild-without-minify && cd ..",
        "watch-client": "cd client && yarn run esbuild-watch",
        "watch-server": "cd server && yarn run esbuild-watch",
        "lint": "eslint ./client/src ./server/src --ext .ts",
        "lint-fix": "eslint --fix ./client/src ./server/src --ext .ts",
        "postinstall": "cd client && yarn install && cd ../server && yarn install && cd ..",
        "create-pre-release": "VERSION=\"$(node utility.js --pre)\"; git tag -a \"v${VERSION}-pre\" -m \"Pre-Release Version ${VERSION}\"; git push origin \"v${VERSION}-pre\"; git commit -a -m \" Version ${VERSION}\"; git push origin; ",
        "create-patch-release": "VERSION=\"$(node utility.js --patch)\"; git tag -a \"v${VERSION}\" -m \"Version ${VERSION}\"; git push origin \"v${VERSION}\"; git commit -a -m \" Version ${VERSION}\"; git push origin; ",
        "create-minor-release": "VERSION=\"$(node utility.js --minor)\"; git tag -a \"v${VERSION}\" -m \"Version ${VERSION}\"; git push origin \"v${VERSION}\"; git commit -a -m \" Version ${VERSION}\"; git push origin; ",
        "create-major-release": "VERSION=\"$(node utility.js --major)\"; git tag -a \"v${VERSION}\" -m \"Version ${VERSION}\"; git push origin \"v${VERSION}\"; git commit -a -m \" Version ${VERSION}\"; git push origin; "
    },
    "devDependencies": {
        "@types/mocha": "^5.2.0",
        "@types/node": "^20",
        "@typescript-eslint/eslint-plugin": "^7.13.1",
        "@typescript-eslint/parser": "^7.13.1",
        "esbuild": "^0.21.5",
        "eslint": "^9.5.0",
        "typescript": "^5.5.4"
    },
    "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/sjsone/vscode-neos-fusion-lsp.git"
    },
    "bugs": {
        "url": "https://github.com/sjsone/vscode-neos-fusion-lsp/issues"
    },
    "homepage": "https://github.com/sjsone/vscode-neos-fusion-lsp#readme",
    "dependencies": {
        "vscode-languageclient": "^9.0.1"
    }
}
